syntax = "proto3";

package internalpb;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/tochemey/gokv/internal/internalpb;internalpb";

// KVService defines the service
service KVService {
  // Put is used to distribute a key/value pair across a cluster of nodes
  rpc Put(PutRequest) returns (PutResponse);
  // Get is used to retrieve a key/value pair in a cluster of nodes
  rpc Get(GetRequest) returns (GetResponse);
  // Delete is used to remove a key/value pair from a cluster of nodes
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  // KeyExists is used to check the existence of a given key in the cluster
  rpc KeyExists(KeyExistsRequest) returns (KeyExistResponse);
  // List returns the list of all entries at a given point in time
  rpc List(ListRequest) returns (ListResponse);
}

// Entry represents the key/value pair
message Entry {
  // Specifies the key
  string key = 1;
  // Specifies the value
  bytes value = 2;
  // States whether it is archived or not
  optional bool archived = 3;
  // Specifies the timestamp which represents the last updated time
  google.protobuf.Timestamp last_updated_time = 4;
  // Specifies the expiration
  google.protobuf.Duration expiry = 5;
}

// NodeState defines the node state
// This will be distributed in the cluster
message NodeState {
  // Specifies the nodeId
  string node_id = 1;
  // Specifies the entries
  map<string, Entry> entries = 2;
}

// FSM defines the delegate FSM
message FSM {
  // Specifies the list of node states
  repeated NodeState node_states = 1;
}

// NodeMeta defines the node metadata
message NodeMeta {
  // Specifies the node name
  string name = 1;
  // Specifies the node host
  string host = 2;
  // Specifies the node port
  uint32 port = 3;
  // Specifies the node discovery port
  uint32 discovery_port = 4;
  // Specifies the creation time
  google.protobuf.Timestamp creation_time = 5;
}

// GetRequest is used to fetch the value of a given key
message GetRequest {
  // Specifies the key
  string key = 1;
}

// GetResponse is the response to GetRequest
message GetResponse {
  // Specifies the specifies
  Entry entry = 1;
}

// PutRequest is used to distribute a given key/value
message PutRequest {
  // Specifies the key
  string key = 1;
  // Specifies the value
  bytes value = 2;
  // Specifies the expiration
  google.protobuf.Duration expiry = 3;
}

// PutResponse is the response to PutRequest
message PutResponse {}

// DeleteRequest is used to remove a distributed key from the cluster
message DeleteRequest {
  // Specifies the key
  string key = 1;
}

// DeleteResponse is the response to DeleteRequest
message DeleteResponse {}

// KeyExistsRequest is used to check the existence of a given key
// in the cluster
message KeyExistsRequest {
  // Specifies the key
  string key = 1;
}

message KeyExistResponse {
  // Specifies the status of the request
  bool exists = 1;
}

// ListRequest is used to return all entries
// at a point in time
message ListRequest {}

// ListResponse is the response to the ListRequest
message ListResponse {
  // Specifies the list of entries
  repeated Entry entries = 1;
}
